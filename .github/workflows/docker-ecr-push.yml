name: Build and Push to AWS ECR

on:
  push:
    branches: [main]

jobs:
  push-to-ecr:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Extract AWS Account ID
        id: aws-account
        run: |
          echo "ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_ENV

      - name: Build, Tag, and Push Backend Image
        run: |
          IMAGE_URI=$ACCOUNT_ID.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO_BACKEND }}
          docker build -t $IMAGE_URI ./backend
          docker push $IMAGE_URI

      - name: Build, Tag, and Push Frontend Image
        run: |
          IMAGE_URI=$ACCOUNT_ID.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO_FRONTEND }}
          docker build -t $IMAGE_URI ./frontend
          docker push $IMAGE_URI

      - name: Build, Tag, and Push Nginx Image
        run: |
          IMAGE_URI=$ACCOUNT_ID.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPO_NGINX }}
          docker build -t $IMAGE_URI ./nginx-for-ECR  # assuming nginx config is in root
          docker push $IMAGE_URI
