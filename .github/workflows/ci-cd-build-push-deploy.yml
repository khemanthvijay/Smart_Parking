
name: CI/CD - Build, Push to ECR, Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Images to ECR
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Extract Git SHA
      id: vars
      run: echo "SHA_TAG=${GITHUB_SHA}" >> $GITHUB_ENV

    - name: Build and Push Backend
      run: |
        IMAGE_URI=537124969361.dkr.ecr.us-west-1.amazonaws.com/smart_parking_backend
        docker build -t $IMAGE_URI:$SHA_TAG -t $IMAGE_URI:latest ./backend
        docker push $IMAGE_URI:$SHA_TAG
        docker push $IMAGE_URI:latest

    - name: Build and Push Frontend
      run: |
        IMAGE_URI=537124969361.dkr.ecr.us-west-1.amazonaws.com/smart_parking_frontend
        docker build -t $IMAGE_URI:$SHA_TAG -t $IMAGE_URI:latest ./frontend
        docker push $IMAGE_URI:$SHA_TAG
        docker push $IMAGE_URI:latest

  deploy:
    name: Deploy to EC2 via SSH
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Setup SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: SSH and Deploy on EC2
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          cd ~
          docker-compose -f docker-compose-ec2.yml pull
          docker-compose -f docker-compose-ec2.yml up -d
        EOF
